services:

  api-service:
    build: ./api-service
    container_name: api-service
    healthcheck:
      test: curl -f http://localhost:5000/version || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
    env_file: .env
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:15.4-alpine
    container_name: database
    volumes:
      - ./db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: pg_isready -U  ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 3s
      retries: 3

  node:
    build: ./frontend
    container_name: frontend
    restart: on-failure

    volumes:
      - ./frontend:/var/www/frontend:rw
    working_dir: /var/www/frontend

  pgadmin:
      container_name: pgadmin_container
      image: dpage/pgadmin4:6.19

      depends_on:
          - database

      environment:
          PGADMIN_DEFAULT_EMAIL: admin@mail.ru
          PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
          PGADMIN_CONFIG_SERVER_MODE: 'False'
          PGADMIN_DEFAULT_DB: ${POSTGRES_DB}
      volumes:
          - ./pgadmin:/var/lib/pgadmin

      ports:
          - 5050:80

      restart: unless-stopped

volumes:
  database:
    external: true

networks:
  base_network:
    external: true